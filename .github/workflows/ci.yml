name: CI
on:
  - push
  - pull_request
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        version: ['1.5', '1.6']
        os: [ubuntu-latest, macOS-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
      - uses: actions/cache@v2
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-runtest@latest
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1.0.14
        with:
          file: lcov.info

  docs:
      name: Documentation
      runs-on: ubuntu-latest
      steps:
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v2
          with: 
            python-version: '3'
        - name: Install dependencies
          run: |
               python -m pip install --upgrade pip
               pip install sympy scipy numpy matplotlib 
               # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        - uses: actions/checkout@v2
        - uses: julia-actions/setup-julia@v1
          with:
            version: '1'
        - run: |
            git config --global user.name name
            git config --global user.email email
            git config --global github.user username
        - run: |
            julia --project=docs -e '
              using Pkg
              Pkg.develop(PackageSpec(path=pwd()))
              Pkg.instantiate()'
        - run: |
            julia --project=docs -e '
              using Documenter: doctest
              using FindSteadyStates
              doctest(FindSteadyStates)'
        - run: julia --project=docs docs/make.jl
          env:
               GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
               DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}

